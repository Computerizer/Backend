# Generated by Django 4.0.8 on 2023-11-09 10:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='manufacturer',
            fields=[
                ('ID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('manufactures_cpu', models.BooleanField(blank=True, null=True, verbose_name='Makes CPU')),
                ('manufactures_gpu', models.BooleanField(blank=True, null=True, verbose_name='Makes GPU')),
                ('manufactures_motherboard', models.BooleanField(blank=True, null=True, verbose_name='Makes Motherboards')),
                ('manufactures_ram', models.BooleanField(blank=True, null=True, verbose_name='Makes RAM')),
                ('manufactures_ssd', models.BooleanField(blank=True, null=True, verbose_name='Makes SSD')),
                ('manufactures_hdd', models.BooleanField(blank=True, null=True, verbose_name='Makes HDD')),
                ('manufactures_psu', models.BooleanField(blank=True, null=True, verbose_name='Makes PSU')),
                ('manufactures_case', models.BooleanField(blank=True, null=True, verbose_name='Makes Cases')),
                ('manufactures_cooler', models.BooleanField(blank=True, null=True, verbose_name='Makes Coolers')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
            },
        ),
        migrations.CreateModel(
            name='watercooler',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('socket', models.CharField(choices=[('AM5', 'AM5'), ('AM4', 'AM4'), ('LGA 1700', 'LGA 1700'), ('LGA 1200', 'LGA 1200'), ('LGA 1151', 'LGA 1151'), ('AMD and Intel', 'AMD and Intel')], max_length=20)),
                ('length', models.FloatField()),
                ('num_fans', models.PositiveIntegerField()),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('rgb', models.BooleanField()),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=15, verbose_name='Color Theme')),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'Watercooler',
                'verbose_name_plural': 'Watercoolers',
            },
        ),
        migrations.CreateModel(
            name='ssd',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('capacity', models.PositiveIntegerField()),
                ('read_speed', models.PositiveIntegerField()),
                ('write_speed', models.PositiveIntegerField()),
                ('mdot2', models.BooleanField(null=True, verbose_name='M.2 Support')),
                ('sata', models.BooleanField(null=True, verbose_name='SATA Support')),
                ('pcie_generation', models.PositiveIntegerField(null=True, verbose_name='PCIe Generation (3, 3.1, or 4)')),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('rgb', models.BooleanField(null=True)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'SSD',
                'verbose_name_plural': 'SSDs',
            },
        ),
        migrations.CreateModel(
            name='ram',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('capacity', models.PositiveIntegerField(choices=[(4, 4), (8, 8), (16, 16), (32, 32), (64, 64), (128, 128)])),
                ('divided_capacity', models.CharField(choices=[('4x2', '4x2'), ('4x4', '4x4'), ('8x2', '8x2'), ('8x4', '8x4'), ('16x2', '16x2'), ('16x4', '16x4'), ('32x2', '32x2'), ('32x4', '32x4')], help_text='How many sticks to make up total RAM capacity', max_length=10)),
                ('channels', models.CharField(choices=[('Single', 'Single'), ('Dual', 'Dual'), ('Four', 'Four')], max_length=20)),
                ('speed', models.IntegerField()),
                ('type', models.CharField(choices=[('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=5)),
                ('pins', models.PositiveIntegerField()),
                ('xmp', models.BooleanField()),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('rgb', models.BooleanField()),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'RAM',
                'verbose_name_plural': 'RAMs',
            },
        ),
        migrations.CreateModel(
            name='psu',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('wattage', models.PositiveIntegerField()),
                ('rating', models.CharField(choices=[('Bronze', 'Bronze'), ('Silver', 'Silver'), ('Gold', 'Gold'), ('Platinum', 'Platinum')], max_length=10)),
                ('connection', models.CharField(choices=[('Full Modular', 'Full Modular'), ('Semi Modular', 'Semi Modular'), ('None Modular', 'None Modular')], max_length=15)),
                ('size', models.CharField(choices=[('ATX', 'ATX'), ('Micro-ATX', 'Micro-ATX'), ('Mini-ITX', 'Mini-ITX')], max_length=10)),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'PSU',
                'verbose_name_plural': 'PSUs',
            },
        ),
        migrations.CreateModel(
            name='motherboard',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('socket', models.CharField(choices=[('AM5', 'AM5'), ('AM4', 'AM4'), ('LGA 1700', 'LGA 1700'), ('LGA 1200', 'LGA 1200'), ('LGA 1151', 'LGA 1151')], max_length=15, verbose_name='Socket support')),
                ('size', models.CharField(choices=[('ATX', 'ATX'), ('Micro-ATX', 'Micro-ATX'), ('Mini-ITX', 'Mini-ITX')], max_length=15, verbose_name='Size (form factor)')),
                ('ram_slots', models.IntegerField(choices=[(4, 4), (2, 2)], null=True, verbose_name='How many ram slots')),
                ('ddr_5_support', models.BooleanField(verbose_name='Supports DDR5 RAM')),
                ('ddr_4_support', models.BooleanField(verbose_name='Supports DDR4 RAM')),
                ('pcie_version', models.BooleanField(null=True, verbose_name='Which Pcie verison (type only 5 or4)')),
                ('wifi', models.BooleanField(help_text='Does it allow WIFI connectivity (without a cable)')),
                ('wifi_6_support', models.BooleanField(verbose_name='Supports WIFI 6')),
                ('lan_support', models.BooleanField(verbose_name='Supports LAN Connectivity')),
                ('rgb', models.BooleanField(help_text="ONLY RGB LIGHT THAT'S PART OF THE MOBO")),
                ('hdmi_count', models.PositiveIntegerField()),
                ('displayport_count', models.PositiveIntegerField()),
                ('usbc_count', models.PositiveIntegerField(verbose_name='USB-C ports count')),
                ('usb3point2_count', models.IntegerField(null=True, verbose_name='USB3.2 count')),
                ('usb_count', models.IntegerField(null=True, verbose_name='USB count')),
                ('mdot2_SSD_slots', models.PositiveIntegerField(verbose_name='Number of M.2 slots')),
                ('integrated_io_sheild', models.BooleanField(help_text='Does it have a built in cover on io')),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=6)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'Motherboard',
                'verbose_name_plural': 'Motherboards',
            },
        ),
        migrations.CreateModel(
            name='hdd',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('capacity', models.PositiveIntegerField()),
                ('speed', models.PositiveIntegerField(choices=[(3600, 3600), (4200, 4200), (5400, 5400), (7200, 7200)], verbose_name='Speed (rpm)')),
                ('sata', models.FloatField(choices=[(1.0, 1.0), (1.5, 1.5), (3.0, 3.0), (6.0, 6.0)], max_length=3, null=True, verbose_name='SATA Version')),
                ('size', models.FloatField(choices=[(1.8, 1.8), (2.5, 2.5), (3.5, 3.5)], null=True)),
                ('rgb', models.BooleanField()),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'HDD',
                'verbose_name_plural': 'HDDs',
            },
        ),
        migrations.CreateModel(
            name='gpu',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('type', models.CharField(choices=[('GTX', 'GTX'), ('RTX', 'RTX'), ('Radeon', 'Radeon')], max_length=6)),
                ('length', models.FloatField(help_text='*in mm - (120, 240, 360, etc)')),
                ('width', models.FloatField(help_text='*slot width (1, 1.5, 2, 2.5, etc)', null=True)),
                ('fan_count', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('vram', models.PositiveIntegerField(verbose_name='Memory (VRAM)')),
                ('gddr_type', models.CharField(choices=[('GDDR6X', 'GDDR6X'), ('GDDR6', 'GDDR6'), ('GDDR5X', 'GDDR5X'), ('GDDR5', 'GDDR5')], max_length=10)),
                ('cores', models.IntegerField(blank=True, null=True)),
                ('base_clock', models.IntegerField()),
                ('boost_clock', models.IntegerField()),
                ('supported_resolution', models.IntegerField(choices=[(1000, 1000), (2000, 2000), (4000, 4000), (5000, 5000), (8000, 8000)], max_length=5)),
                ('pcie_5', models.BooleanField(null=True)),
                ('rgb', models.BooleanField()),
                ('pin_num', models.PositiveIntegerField(help_text='Number of pins to power the card', null=True, verbose_name='Pins required')),
                ('displayport_count', models.PositiveIntegerField()),
                ('hdmi_count', models.PositiveIntegerField()),
                ('usbc_count', models.PositiveIntegerField(null=True, verbose_name='USB-C ports count')),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=6)),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'GPU',
                'verbose_name_plural': 'GPUs',
            },
        ),
        migrations.CreateModel(
            name='fan',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('size', models.PositiveIntegerField(null=True)),
                ('lowest_rpm', models.PositiveIntegerField(help_text='The RPM value', null=True, verbose_name='Lowest Speed')),
                ('highest_rpm', models.PositiveIntegerField(help_text='The RPM value', null=True, verbose_name='Highest Speed')),
                ('rgb', models.BooleanField()),
                ('connection', models.PositiveIntegerField(null=True, verbose_name='Num of pins')),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=15, verbose_name='Color Theme')),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'Fan',
                'verbose_name_plural': 'Fans',
            },
        ),
        migrations.CreateModel(
            name='cpu',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('cores', models.PositiveIntegerField()),
                ('threads', models.PositiveIntegerField()),
                ('base_clock', models.FloatField()),
                ('boost_clock', models.FloatField()),
                ('overclockable', models.BooleanField()),
                ('socket', models.CharField(choices=[('AM4', 'AM4'), ('LGA 1700', 'LGA 1700'), ('LGA 1200', 'LGA 1200')], max_length=15)),
                ('cooler', models.BooleanField(help_text='eg: amd ryzen 3600', verbose_name='Comes with cooler')),
                ('power_consumption', models.PositiveIntegerField(null=True)),
                ('integrated_graphics', models.BooleanField(null=True)),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'CPU',
                'verbose_name_plural': 'CPUs',
            },
        ),
        migrations.CreateModel(
            name='case',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('mobo_support', models.CharField(choices=[('ATX', 'ATX'), ('Micro-ATX', 'Micro-ATX'), ('Mini-ITX', 'MiniI-TX')], max_length=10)),
                ('max_gpu_length', models.FloatField(blank=True, null=True)),
                ('max_radiator_size', models.FloatField(blank=True, null=True)),
                ('rgb', models.BooleanField()),
                ('has_fans', models.BooleanField()),
                ('num_fans', models.PositiveIntegerField()),
                ('max_num_number', models.IntegerField(null=True)),
                ('max_fan_size', models.PositiveIntegerField(null=True)),
                ('io', models.TextField(null=True)),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=15, verbose_name='Color Theme')),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'Case',
                'verbose_name_plural': 'Cases',
            },
        ),
        migrations.CreateModel(
            name='aircooler',
            fields=[
                ('ID', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('relativeSize', models.CharField(choices=[('S', 'S'), ('M', 'M'), ('L', 'L')], max_length=1, null=True)),
                ('data_added', models.DateField(auto_now_add=True, null=True)),
                ('amazon_url', models.TextField(blank=True, null=True)),
                ('newegg_url', models.TextField(blank=True, null=True)),
                ('partRating', models.FloatField(blank=True, null=True)),
                ('amazon_price', models.FloatField(blank=True, null=True)),
                ('newegg_price', models.FloatField(blank=True, null=True)),
                ('previous_price', models.FloatField(default=0.0, null=True)),
                ('current_price', models.FloatField(blank=True, null=True)),
                ('lowest_Price_Link', models.URLField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True)),
                ('socket', models.CharField(choices=[('AM5', 'AM5'), ('AM4', 'AM4'), ('LGA 1700', 'LGA 1700'), ('LGA 1200', 'LGA 1200'), ('LGA 1151', 'LGA 1151'), ('AMD Intel', 'AMD INTEL')], max_length=15)),
                ('size', models.CharField(choices=[('ATX', 'ATX'), ('MicroAtx', 'MicroAtx'), ('MiniItx', 'MiniItx')], max_length=10)),
                ('height', models.FloatField()),
                ('length', models.FloatField()),
                ('num_fans', models.PositiveIntegerField()),
                ('num_heatsinks', models.PositiveIntegerField()),
                ('color_name', models.CharField(default='Black', max_length=15)),
                ('color_hex', models.CharField(default='#RRGGBB', max_length=8)),
                ('rgb', models.BooleanField()),
                ('power_consumption', models.IntegerField(null=True)),
                ('theme', models.CharField(choices=[('dark', 'dark'), ('light', 'light')], max_length=10, verbose_name='Color Theme')),
                ('use_case', models.CharField(choices=[('Budget', 'Budget'), ('Mid-Range', 'Mid-Range'), ('High-end', 'High-end')], max_length=15)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='Parts.manufacturer')),
            ],
            options={
                'verbose_name': 'Aircooler',
                'verbose_name_plural': 'Aircoolers',
            },
        ),
    ]
